 
plugins {
    id 'java'
}



// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'


group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '4.4.3'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.0.0-alpha-1'
    testImplementation group: 'org.testng', name: 'testng', version: '7.6.0'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    // NOTE: Added to remove the "ERROR StatusLogger Log4j2 could not find a logging implementation. Please add log4j-core to the classpath. Using SimpleLogger to log to the console..." error shown
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.2'

    // https://mvnrepository.com/artifact/org.apache.poi/poi
    implementation group: 'org.apache.poi', name: 'poi', version: '5.2.2'

    // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.2'
}

// Additional config for Crio workspace
buildDir = '/tmp/external_build'

task startScript(type:Exec) {
    commandLine '../selenium-run.sh'
}

run.dependsOn startScript

test.dependsOn startScript

test {
    useTestNG() {
        suites 'src/test/java/QKART_TESTNG/testng.xml'
        useDefaultListeners = true
    }

    afterSuite { desc, result ->
            if (!desc.parent) {
                println "\nTEST RESULT: ${result.resultType}"
                println "TEST SUMMARY: RAN ${result.testCount} TESTS, " +
                        "${result.successfulTestCount} SUCCEEDED, " +
                        "${result.failedTestCount} FAILED, " +
                        "${result.skippedTestCount} SKIPPED"
            }
    }

    testLogging {
		events "PASSED", "SKIPPED", "FAILED", "STANDARD_OUT", "STANDARD_ERROR"
        exceptionFormat = 'full'

        // Optionally do:
        showStackTraces = true
	}

    testLogging.showStandardStreams = true
    test.outputs.upToDateWhen {false}

}

mainClassName = 'QKART_SANITY_LOGIN.Module1.QkartSanity'
